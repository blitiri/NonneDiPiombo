1.0.0.18:
    - Added XBox One controller mapping for XBox One platform.

1.0.0.17:
    - Fixed issue where certain keyboards would show up as joysticks when using Raw Input.

1.0.0.16:
    - Fixed issue where certain controllers could contain invalid null characters in Joystick.hardwareName on some systems when using Raw Input.

1.0.0.15:
    New Controller Definitions:
    - Logitech G27 Racing Wheel

    Changes:
    - Separated Raw Input and Direct Input into separate platforms in HardwareJoystickMap to support different mappings for each input source.
    - Changed PS Vita mapping in Dual Analog Gamepad template so L/R buttons correspond to triggers (Left Shoulder 2, Right Shoulder 2) instead of shoulder buttons.

    Bug Fixes:
    - Fixed issue with button detection on certain controllers in Raw Input.
    - Fixed issue when user deletes an InputBehavior that was still assigned to one or more
 Actions.
    - Fixed issue where wrong InputBehavior might be loaded if any InputBehaviors were previously deleted.
    - Fixed issue with split mouse axes returning clamped values.

1.0.0.14:
    New Controller Definitions:
    - iOS Mfi Controller (iOS only)
    - Red Samurai Wireless Gamepad (Android only)
    
    Other:
    - Added more XML documentation in the Player class.

1.0.0.13:
    Bug Fixes:
    - Native mouse handling in Windows Standalone now handles Alt + Enter screen mode changes properly.
    
1.0.0.12:
    Changes:
    - Reverted all events back to .NET events and implemented internal workaround to fix issues on iOS.

1.0.0.11:
    New Controller Definitions:
    - Microsoft XBox One Controller
    - Logitech Extreme 3D Pro
    - Logitech RumblePad 2
    - Arcade Guns G-500 AimTrak Light Guns
    - Sony Playstation Vita PSM
    
    Changes:
    - Added more mappable platforms to Hardware Joystick Map (iOS, Windows Phone 8, Blackberry, Playstation 3, Playstation 4, Playstation Mobile, Playstation Vita, XBox 360, XBox One, Wii, WiiU)

    Bug Fixes:
    - .NET Events have been replaced with a custom event system because of exceptions in iOS related to event handling.
    - Fixed incorrect button detection on certain controllers when using RawInput
    - ReInput.GetUnityJoystickIdFromAnyButtonOrAxisPress now handles axes with non-zero default values correctly.
    - CustomControllersTouch demo now works properly on mobile devices.

1.0.0.10:
    Bug Fixes:
    - Fixed bug in OnGUI bug workaround added in 1.0.0.9.

1.0.0.9:
    Bug Fixes:
    - Added workaround for Unity bug in input handled during OnGUI loop. Also affected axis detection during polling in OnGUI loop.

1.0.0.8:
    Bug Fixes:
    - Fixed error when pressing play in a scene with a Rewired Input manager with no Actions created.
    - Fixed bug with controller axis assignment polling for axes that have a non-zero default value.

1.0.0.7:
    New Features:
    - Added Raw Input support on Windows Standalone platform.
    - Raw Input is now the default input source on Windows Standalone.
    - Mouse input can now be handled natively through Raw Input on the Windows Standlone platform when using either Direct Input or Raw Input as the input source.
    - Native mouse handling is now used by default.
    - Framerate independent input now applies to mouse input on Windows Standalone.
    - Rewired Editor: Keyboard map keys can now be assigned by polling for a key press.
    
    Bug Fixes:
    - Increased Direct Input Hat limit to 4 from 2.
    - In the Unity editor, when the build target is set to a platform other than the OS running the editor, controller maps will be loaded from the platform matching the computer's OS instead of the build target setting.
    - Mouse axis assignment polling now works correctly regardless of framerate.
    - Controller axis assignment polling now handles axes that have a non-zero default value.
    - Modified key combinations now block input from actions mapped to the same unmodified keys when activated.
    - Loading default maps in a Player will now attempt to retain the current enabled states of the maps after loading. If the number of maps before and after differs, this isn't possible and the enabled states must be set manually.
    - Fixed improper calculation with Screen Position Delta and Speed mouse modes.

1.0.0.6:
    Bug Fixes:
    - Rewired Editor: Fixed error when adding a Custom Controller in Unity 4.5+
    - Added default Unity InputManager axes to replacement InputManager.asset file.

1.0.0.5:
    New Features:
    - You can now move a Actions to a different categories in the Rewired Editor.
    
    Bug Fixes:
    - Rewired Editor: Layout list box now shows asterisk when a KeyboardMap exists in that Layout.
    - Player.ControllerHelper.MapHelper.InputBehavoirs changed to InputBehaviors * This change requires code using this property to be updated *
    - HardwareJoystickMap editor: Fixed exception when creating HardwareJoystickMap elements before creating an Element Identifier.
    
1.0.0.4:
    - Added event-based input.
    - Added some missing GetAxis...ById methods in ControllerWithAxes.
    - Added methods to set enabled state on all maps in a specific category in Player.
    - XInput controllers with an unknown sub type are now treated as gamepads.
    - Changed name of "Generic Gamepad" to "DF Generic Gamepad" to avoid confusion.

    Added new methods:
    - Player.AddInputEventDelegate
    - Player.RemoveInputEventDelegate
    - Player.ClearInputEventDelegates
    - Player.ControllerHelper.Controllers
    - Player.MapHelper.SetAllMapsEnabled
    - Player.MapHelper.SetMapsEnabled
    - ControllerWithMap.GetButtonLastTimePressedById
    - ControllerWithMap.GetButtonLastTimeUnpressedById
    - ControllerWithAxes.GetAxisTimeActiveById
    - ControllerWithAxes.GetAxisTimeInactiveById
    - ControllerWithAxes.GetAxisLastTimeActiveById
    - ControllerWithAxes.GetAxisLastTimeInactiveById
    - ControllerWithAxes.GetAxisRawTimeActiveById
    - ControllerWithAxes.GetAxisRawTimeInactiveById
    - ControllerWithAxes.GetAxisRawLastTimeActiveById
    - ControllerWithAxes.GetAxisRawLastTimeInactiveById

    Added new Struct:
    - InputActionEventData

    Added new Enums:
    - UpdateLoopType
    - InputActionEventType

1.0.0.3:
    Added new methods:
    - ReInput.ControllerHelper.GetLastActiveController
    - Player.GetAxisTimeActive
    - Player.GetAxisTimeInactive
    - Player.GetAxisRawTimeActive
    - Player.GetAxisRawTimeInactive
    - Player.ControllerHelper.GetLastActiveController
    - Controller.GetLastTimeActive
    - Controller.GetLastTimeAnyButtonPressed
    - Controller.GetButtonLastTimePressed
    - Controller.GetButtonLastTimeUnpressed
    - ControllerWithAxes.GetLastTimeAnyAxisActive
    - ControllerWithAxes.GetAxisTimeActive
    - ControllerWithAxes.GetAxisTimeInactive
    - ControllerWithAxes.GetAxisLastTimeActive
    - ControllerWithAxes.GetAxisLastTimeInactive
    - ControllerWithAxes.GetAxisRawTimeActive
    - ControllerWithAxes.GetAxisRawTimeInactive
    - ControllerWithAxes.GetAxisRawLastTimeActive
    - ControllerWithAxes.GetAxisRawLastTimeInactive
    - Controller.Axis.lastTimeActive
    - Controller.Axis.lastTimeActiveRaw
    - Controller.Axis.lastTimeInactive
    - Controller.Axis.lastTimeInactiveRaw
    - Controller.Axis.timeActive
    - Controller.Axis.timeInactive
    - Controller.Axis.timeActiveRaw
    - Controller.Axis.timeInactiveRaw
    - Controller.Button.lastTimePressed
    - Controller.Button.lastTimeUnpressed

1.0.0.2:
    - Fixed bug with digital axis simulation calculation when Time.timeScale != 1

1.0.0.1:
    - Added 8-way hat support
    - Added XML schemas for xml data output
    - Added Android support
    - Added multi-button support in hardware joystick maps
    - Added new controller definitions: CH FighterStick USB, CH Pro Pedals USB, CH Eclipse Yoke, Sony DualShock 3, Sony DualShock 4
    - Added controller definitions for all controllers on Android
    - Removed joysticks 11-20 from InputManager as Unity only supports up to 11

1.0.0.0:
    - Initial release